name: Publish Docker to ECR
description: Build and publioshed docker image to ECR
author: itsmycargo
branding:
  color: blue
  icon: layers

inputs:
  repsitory:
    description: ECR Repository to use for Images
    required: true
  registry_password:
    description: “Password for image registry”
    required: true
  aws-access-key-id:
    description: AWS Access Key ID for login and pushing to ECR Repository
    required: true
  aws-secret-access-key:
    description: AWS Access Key for login and pushing to ECR Repository
    required: true
  aws-region:
    description: AWS Region for ECR Repository
    required: true

runs:
  using: "composite"
  steps:
    - id: meta
      uses: itsmycargo/docker-meta-action@v1.0.0
      with:
        image: ${{ inputs.image }}

    - uses: actions/checkout@v2
    - uses: docker/setup-qemu-action@v1
    - uses: docker/setup-buildx-action@v1

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Cache Docker layers
      uses: actions/cache@v2.1.4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: ${{ runner.os }}-buildx-

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        push: true
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          RELEASE=${{ steps.meta.outputs.sha }}
